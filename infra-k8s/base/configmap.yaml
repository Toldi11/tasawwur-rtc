apiVersion: v1
kind: ConfigMap
metadata:
  name: tasawwur-rtc-config
  namespace: tasawwur-rtc
  labels:
    app.kubernetes.io/name: tasawwur-rtc
    app.kubernetes.io/component: configuration
data:
  # Database Configuration
  DATABASE_HOST: "postgres-service"
  DATABASE_PORT: "5432"
  DATABASE_NAME: "tasawwur_rtc"
  
  # Redis Configuration
  REDIS_HOST: "redis-service"
  REDIS_PORT: "6379"
  REDIS_DATABASE: "0"
  
  # Application Configuration
  SPRING_PROFILES_ACTIVE: "prod"
  LOG_LEVEL: "INFO"
  
  # TURN Server Configuration
  TURN_SERVER_HOST: "turn-server-service"
  TURN_SERVER_PORT: "3478"
  
  # Monitoring
  METRICS_ENABLED: "true"
  HEALTH_CHECK_ENABLED: "true"
  
  # Rate Limiting
  RATE_LIMIT_ENABLED: "true"
  RATE_LIMIT_RPM: "100"
  
  # Performance Tuning
  JVM_OPTS: >-
    -XX:+UseContainerSupport
    -XX:MaxRAMPercentage=75.0
    -XX:+UseG1GC
    -XX:+UseStringDeduplication
    -Djava.security.egd=file:/dev/./urandom
    -server

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
  namespace: tasawwur-rtc
  labels:
    app.kubernetes.io/name: tasawwur-rtc
    app.kubernetes.io/component: proxy
data:
  nginx.conf: |
    user nginx;
    worker_processes auto;
    error_log /var/log/nginx/error.log notice;
    pid /var/run/nginx.pid;

    events {
        worker_connections 1024;
        use epoll;
        multi_accept on;
    }

    http {
        include /etc/nginx/mime.types;
        default_type application/octet-stream;

        # Logging
        log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                       '$status $body_bytes_sent "$http_referer" '
                       '"$http_user_agent" "$http_x_forwarded_for"';
        access_log /var/log/nginx/access.log main;

        # Performance
        sendfile on;
        tcp_nopush on;
        tcp_nodelay on;
        keepalive_timeout 65;
        types_hash_max_size 2048;
        client_max_body_size 10M;

        # Gzip
        gzip on;
        gzip_vary on;
        gzip_min_length 1000;
        gzip_proxied any;
        gzip_comp_level 6;
        gzip_types
            text/plain
            text/css
            text/xml
            text/javascript
            application/json
            application/javascript
            application/xml+rss
            application/atom+xml
            image/svg+xml;

        # Rate limiting
        limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
        limit_req_zone $binary_remote_addr zone=auth:10m rate=5r/s;

        # Upstream services
        upstream signaling-server {
            least_conn;
            server signaling-server-service:8080 max_fails=3 fail_timeout=30s;
            keepalive 32;
        }

        upstream rest-api-server {
            least_conn;
            server rest-api-server-service:8081 max_fails=3 fail_timeout=30s;
            keepalive 32;
        }

        # Main server block
        server {
            listen 80;
            server_name _;

            # Health check
            location /health {
                access_log off;
                return 200 "healthy\n";
                add_header Content-Type text/plain;
            }

            # Dashboard frontend
            location / {
                root /usr/share/nginx/html;
                try_files $uri $uri/ /index.html;
                
                # Security headers
                add_header X-Frame-Options DENY;
                add_header X-Content-Type-Options nosniff;
                add_header X-XSS-Protection "1; mode=block";
                add_header Referrer-Policy strict-origin-when-cross-origin;
                
                # Cache static assets
                location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
                    expires 1y;
                    add_header Cache-Control "public, immutable";
                }
            }

            # WebSocket signaling
            location /ws {
                limit_req zone=api burst=20 nodelay;
                
                proxy_pass http://signaling-server;
                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection "upgrade";
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
                
                proxy_connect_timeout 60s;
                proxy_send_timeout 60s;
                proxy_read_timeout 300s;
            }

            # REST API
            location /api/ {
                limit_req zone=api burst=50 nodelay;
                
                proxy_pass http://rest-api-server/;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
                
                proxy_connect_timeout 30s;
                proxy_send_timeout 30s;
                proxy_read_timeout 30s;
            }

            # Authentication endpoints with stricter rate limiting
            location ~ ^/api/(auth|login|register) {
                limit_req zone=auth burst=10 nodelay;
                
                proxy_pass http://rest-api-server;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
            }

            # Actuator endpoints (monitoring)
            location /actuator/ {
                allow 10.0.0.0/8;
                allow 172.16.0.0/12;
                allow 192.168.0.0/16;
                deny all;
                
                proxy_pass http://rest-api-server/actuator/;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
            }
        }
    }
