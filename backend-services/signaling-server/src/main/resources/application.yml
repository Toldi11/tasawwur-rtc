# Tasawwur RTC Signaling Server Configuration

server:
  port: 8080
  shutdown: graceful
  tomcat:
    max-connections: 10000
    threads:
      max: 200
      min-spare: 10
    connection-timeout: 20000
    keep-alive-timeout: 60000

spring:
  application:
    name: tasawwur-rtc-signaling-server
  
  profiles:
    active: ${SPRING_PROFILES_ACTIVE:dev}
  
  # Redis Configuration
  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}
      password: ${REDIS_PASSWORD:}
      database: ${REDIS_DATABASE:0}
      timeout: 2000ms
      lettuce:
        pool:
          max-active: 20
          max-idle: 10
          min-idle: 5
          max-wait: 1000ms
  
  # Jackson Configuration
  jackson:
    default-property-inclusion: NON_NULL
    serialization:
      write-dates-as-timestamps: false
      fail-on-empty-beans: false
    deserialization:
      fail-on-unknown-properties: false
    time-zone: UTC
  
  # Security Configuration
  security:
    user:
      name: admin
      password: ${ADMIN_PASSWORD:admin123}

# Tasawwur RTC Specific Configuration
tasawwur:
  rtc:
    # JWT Configuration
    jwt:
      secret: ${JWT_SECRET:tasawwur-rtc-jwt-secret-change-in-production}
      expiration: 86400 # 24 hours in seconds
    
    # Authentication
    auth:
      enabled: ${AUTH_ENABLED:true}
    
    # Channel Configuration
    channels:
      max-members: ${MAX_CHANNEL_MEMBERS:100}
      ttl-hours: ${CHANNEL_TTL_HOURS:24}
      cleanup-interval: ${CHANNEL_CLEANUP_INTERVAL:300} # 5 minutes
    
    # WebSocket Configuration
    websocket:
      max-text-message-size: 64KB
      max-binary-message-size: 64KB
      send-time-limit: 10000
      send-buffer-size-limit: 512KB
    
    # Metrics and Monitoring
    metrics:
      enabled: true
      export-interval: 30s

# Management and Monitoring
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
      base-path: /actuator
  
  endpoint:
    health:
      probes:
        enabled: true
      show-details: when-authorized
      show-components: when-authorized
  
  health:
    redis:
      enabled: true
  
  metrics:
    export:
      prometheus:
        enabled: true
    tags:
      application: ${spring.application.name}
      environment: ${spring.profiles.active}

# Logging Configuration
logging:
  level:
    root: INFO
    com.tasawwur.rtc: ${LOG_LEVEL:INFO}
    org.springframework.web.socket: ${WEBSOCKET_LOG_LEVEL:INFO}
    org.springframework.security: WARN
    io.lettuce: WARN
  
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level [%logger{36}] - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level [%logger{36}] - %msg%n"
  
  file:
    name: ${LOG_FILE:logs/signaling-server.log}
    max-size: 100MB
    max-history: 30

---
# Development Profile
spring:
  config:
    activate:
      on-profile: dev

  data:
    redis:
      host: localhost
      port: 6379

tasawwur:
  rtc:
    auth:
      enabled: false # Disable auth for development
    channels:
      max-members: 10 # Smaller limit for dev

logging:
  level:
    com.tasawwur.rtc: DEBUG
    org.springframework.web.socket: DEBUG

---
# Production Profile
spring:
  config:
    activate:
      on-profile: prod

  data:
    redis:
      host: ${REDIS_HOST}
      port: ${REDIS_PORT:6379}
      password: ${REDIS_PASSWORD}
      ssl: true

tasawwur:
  rtc:
    auth:
      enabled: true
    jwt:
      secret: ${JWT_SECRET}
    channels:
      max-members: 100
      ttl-hours: 24

logging:
  level:
    com.tasawwur.rtc: INFO
    org.springframework.web.socket: WARN

---
# Test Profile
spring:
  config:
    activate:
      on-profile: test

  data:
    redis:
      host: localhost
      port: 6379

tasawwur:
  rtc:
    auth:
      enabled: false
    channels:
      max-members: 5

logging:
  level:
    com.tasawwur.rtc: DEBUG

