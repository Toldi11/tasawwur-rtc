# Tasawwur RTC REST API Server Configuration

server:
  port: 8081
  shutdown: graceful
  servlet:
    context-path: /
  tomcat:
    max-connections: 5000
    threads:
      max: 100
      min-spare: 10

spring:
  application:
    name: tasawwur-rtc-rest-api-server
  
  profiles:
    active: ${SPRING_PROFILES_ACTIVE:dev}
  
  # Database Configuration
  datasource:
    url: ${DATABASE_URL:jdbc:postgresql://localhost:5432/tasawwur_rtc_dev}
    username: ${DATABASE_USER:postgres}
    password: ${DATABASE_PASSWORD:password}
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 20
      minimum-idle: 5
      connection-timeout: 30000
      idle-timeout: 600000
      max-lifetime: 1800000
  
  # JPA Configuration
  jpa:
    hibernate:
      ddl-auto: validate # Use Flyway for schema management
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: false
        show_sql: false
        jdbc:
          batch_size: 20
        order_inserts: true
        order_updates: true
    open-in-view: false
  
  # Flyway Configuration
  flyway:
    enabled: true
    locations: classpath:db/migration
    baseline-on-migrate: true
    validate-on-migrate: true
  
  # Redis Configuration
  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}
      password: ${REDIS_PASSWORD:}
      database: ${REDIS_DATABASE:1}
      timeout: 2000ms
      lettuce:
        pool:
          max-active: 10
          max-idle: 5
          min-idle: 2
  
  # Jackson Configuration
  jackson:
    default-property-inclusion: NON_NULL
    serialization:
      write-dates-as-timestamps: false
      fail-on-empty-beans: false
    deserialization:
      fail-on-unknown-properties: false
    time-zone: UTC
  
  # Security Configuration
  security:
    user:
      name: admin
      password: ${ADMIN_PASSWORD:admin123}

# Tasawwur RTC Specific Configuration
tasawwur:
  rtc:
    # JWT Configuration
    jwt:
      secret: ${JWT_SECRET:tasawwur-rtc-jwt-secret-change-in-production}
      expiration: 86400 # 24 hours in seconds
    
    # API Rate Limiting
    rate-limit:
      enabled: ${RATE_LIMIT_ENABLED:true}
      requests-per-minute: ${RATE_LIMIT_RPM:100}
    
    # Project Limits
    projects:
      max-per-user: ${MAX_PROJECTS_PER_USER:10}
      default-usage-limit: ${DEFAULT_USAGE_LIMIT_MINUTES:1000}
    
    # Usage Tracking
    usage:
      batch-size: ${USAGE_BATCH_SIZE:100}
      flush-interval: ${USAGE_FLUSH_INTERVAL:300} # 5 minutes

# OpenAPI Documentation
springdoc:
  api-docs:
    path: /api-docs
  swagger-ui:
    path: /swagger-ui.html
    enabled: true
    operations-sorter: method
    tags-sorter: alpha
  info:
    title: Tasawwur RTC REST API
    description: REST API for Tasawwur RTC platform - user management, project management, and token generation
    version: 1.0.0
    contact:
      name: Tasawwur RTC Team
      email: team@tasawwur-rtc.com
      url: https://tasawwur-rtc.com
    license:
      name: MIT License
      url: https://opensource.org/licenses/MIT

# Management and Monitoring
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
      base-path: /actuator
  
  endpoint:
    health:
      probes:
        enabled: true
      show-details: when-authorized
      show-components: when-authorized
  
  health:
    db:
      enabled: true
    redis:
      enabled: true
  
  metrics:
    export:
      prometheus:
        enabled: true
    tags:
      application: ${spring.application.name}
      environment: ${spring.profiles.active}

# Logging Configuration
logging:
  level:
    root: INFO
    com.tasawwur.rtc: ${LOG_LEVEL:INFO}
    org.springframework.security: WARN
    org.hibernate: WARN
    org.flywaydb: INFO
  
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level [%logger{36}] - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level [%logger{36}] - %msg%n"
  
  file:
    name: ${LOG_FILE:logs/rest-api-server.log}
    max-size: 100MB
    max-history: 30

---
# Development Profile
spring:
  config:
    activate:
      on-profile: dev

  datasource:
    url: jdbc:postgresql://localhost:5432/tasawwur_rtc_dev
    username: postgres
    password: password

  jpa:
    hibernate:
      ddl-auto: validate
    properties:
      hibernate:
        show_sql: true
        format_sql: true

  data:
    redis:
      host: localhost
      port: 6379

tasawwur:
  rtc:
    rate-limit:
      enabled: false # Disable rate limiting in dev
    projects:
      max-per-user: 50 # Higher limit for dev

logging:
  level:
    com.tasawwur.rtc: DEBUG
    org.springframework.web: DEBUG

---
# Production Profile
spring:
  config:
    activate:
      on-profile: prod

  datasource:
    url: ${DATABASE_URL}
    username: ${DATABASE_USER}
    password: ${DATABASE_PASSWORD}
    hikari:
      maximum-pool-size: 50

  jpa:
    hibernate:
      ddl-auto: validate
    properties:
      hibernate:
        show_sql: false
        format_sql: false

  data:
    redis:
      host: ${REDIS_HOST}
      port: ${REDIS_PORT:6379}
      password: ${REDIS_PASSWORD}
      ssl: true

tasawwur:
  rtc:
    jwt:
      secret: ${JWT_SECRET}
    rate-limit:
      enabled: true
      requests-per-minute: 60

logging:
  level:
    com.tasawwur.rtc: INFO
    org.springframework.web: WARN

---
# Test Profile
spring:
  config:
    activate:
      on-profile: test

  datasource:
    url: jdbc:h2:mem:testdb
    username: sa
    password: 
    driver-class-name: org.h2.Driver

  jpa:
    hibernate:
      ddl-auto: create-drop
    database-platform: org.hibernate.dialect.H2Dialect

  flyway:
    enabled: false # Disable Flyway for tests

  data:
    redis:
      host: localhost
      port: 6379

tasawwur:
  rtc:
    rate-limit:
      enabled: false
    projects:
      max-per-user: 100

logging:
  level:
    com.tasawwur.rtc: DEBUG
